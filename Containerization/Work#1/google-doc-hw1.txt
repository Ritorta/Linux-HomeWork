Google-doc HomeWork#1 Containerization - Урок 1. Механизмы пространства имен.

Задание: 
Необходимо продемонстрировать изоляцию одного и того же приложения 
(как решено на семинаре - командного интерпретатора) в различных пространствах имен.

Выполнение:

fox@love-linux:~/Containerization/HW1$ sudo unshare -pf -n --mount-proc bash

"sudo" используется для запуска команды от имени суперпользователя, обеспечивая привилегированный доступ к выполнению операций.
"unshare" используется для создания нового пространства имён (namespaces), которое изолирует указанные процессы от других процессов в системе.
Опция "-pf" указывает, что нужно изолировать и работать в новом пространстве имён для PID (идентификаторы процессов) и файловой системы.
Опция "-n" указывает, что нужно изолировать новое пространство имён для сети.
"--mount-proc" указывает, что нужно монтировать файловую систему /proc в новое пространство имён.
"bash" запускает оболочку (shell) командной строки в новом изолированном пространстве имён.

Таким образом, эта команда создает новое изолированное пространство имён с отдельными PID, 
сетевыми настройками и точкой монтирования /proc, 
после чего запускает интерактивную оболочку bash в этом изолированном пространстве. 
Это может использоваться для тестирования и разработки программ, 
проведения экспериментов с изоляцией процессов и сетевых настроек, и других подобных задач.

root@love-linux:/home/fox/Containerization/HW1# ps -afx

команда отображает текущие процессы в операционной системе Linux. 
Опция "-a" позволяет отображать процессы всех пользователей.
Опция "-f" отображает полную информацию о каждом процессе, 
включая его идентификатор (PID), родительский процесс (PPID), 
пользователь, использование памяти, использование ЦП, статус и другие детали.

---- Creanshot 1 HW1----

В терминале справа мы видим, несколько процессов bash и процесс bash в изолированом пространсве имён.
В терминале слева мы видим изолированную оболочку с несколькими процессами.

Потом пробуем запустить команду для пинга сервиса Яндекс.

root@love-linux:/home/fox/Containerization/HW1# ping ya.ru

---- Creanshot 2 HW2----

Становиться понятно, что в изолированной системе в терминале слева пинг даёт ошибку "Temporary failure in name resolution", 
что говорит нам  о только локальной сети в данной системе.
В правом окне пинг проходит без проблем.

Далее использовав команды:
root@love-linux:/home/fox/Containerization/HW1# hostname
root@love-linux:/home/fox/Containerization/HW1# sudo unshare -u bash
root@love-linux:/home/fox/Containerization/HW1# hostname hate-linux
root@love-linux:/home/fox/Containerization/HW1# hostname

---- Creanshot 3 HW3----

Мы получим одинаковое имя хоста в обоих терминалах, команда $ unshare запускает программу (опционально) в новом namespace. 
Флаг -u говорит ей запустить bash в новом UTS namespace. Новый процесс bash указывает на другой файл UTS, 
тогда как все остальные остаются прежними. После того как мы изменить системный hostname из нашего нового процесса bash,
это не повлияло ни на какой другой процесс в системе.